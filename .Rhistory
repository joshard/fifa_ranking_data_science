<<<<<<< HEAD
=======
# Shiny server
##################################
server <-function(input, output) {
#use our new function to create an output called formattableexample. We require an explicit call to the as.htmlwidget function as this does not register as an interactive  environment
output$formattableexample <-renderFormattable({
formattable(world_data1, list(rank=color_tile("red","green"))
})
)
}
shinyApp(ui = ui, server = server)
library(shiny)
>>>>>>> dbdb3889f5ff01dc56ccbe32f02602b9ca34bd01
library(formattable)
#Define a dataframe (example stolen from formattable readme)
data<-read.csv(file.choose(),header = TRUE)
fifa<-as.data.frame(data)
world_data1<-fifa%>%filter(rank<=216,rank_date=="6/7/2018")%>%select(rank,country_full,confederation,previous_points,rank_change)%>%arrange(desc(total_points))
ui <- fluidPage(
#use our new function to show the output we just defined.
fluidRow(formattableOutput("formattableexample"))
)
##################################
# Shiny server
##################################
library(shiny)
library(formattable)
#Define a dataframe (example stolen from formattable readme)
data<-read.csv(file.choose(),header = TRUE)
fifa<-as.data.frame(data)
world_data1<-fifa%>%filter(rank<=216,rank_date=="6/7/2018")%>%select(rank,country_full,confederation,previous_points,rank_change),total_points%>%arrange(desc(total_points))
ui <- fluidPage(
#use our new function to show the output we just defined.
fluidRow(formattableOutput("formattableexample"))
)
##################################
# Shiny server
##################################
server <- function(input,output){
output$formattableexample<-renderFormattable(world_data1)
}
shinyApp(ui=ui,server=server)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
library(shiny)
library(formattable)
#Define a dataframe (example stolen from formattable readme)
data<-read.csv(file.choose(),header = TRUE)
fifa<-as.data.frame(data)
world_data1<-fifa%>%filter(rank<=216,rank_date=="6/7/2018")%>%select(rank,country_full,confederation,previous_points,rank_change),total_points%>%arrange(desc(total_points))
ui <- fluidPage(
#use our new function to show the output we just defined.
fluidRow(formattableOutput("formattableexample"))
)
##################################
# Shiny server
##################################
server <- function(input,output){
output$formattableexample<-renderFormattable(world_data1)
}
shinyApp(ui=ui,server=server)
runApp('Desktop')
runApp('Desktop')
shiny::runApp('Desktop')
runApp('Desktop')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
shiny::runApp('Desktop/R/rsconnect')
runApp('Desktop/R/rsconnect/shinyapps.io')
runApp('Desktop/Test')
library(ggplot2)
library(DT)
library(png)
library(dplyr)
library(formattable)
library(markdown)
library(lubridate)
library(plyr)
library(tidyr)
data<-read.csv(file.choose(),header = TRUE)
fifa<-as.data.frame(data)
firt_position <- fifa%>%filter(rank<=3)%>%select(country_full)
table_count<-count(firt_position)
table_count
library(ggplot2)
library(DT)
library(png)
library(dplyr)
library(formattable)
library(markdown)
library(lubridate)
library(plyr)
library(tidyr)
data<-read.csv(file.choose(),header = TRUE)
fifa<-as.data.frame(data)
firt_position <- fifa%>%filter(rank<=3)%>%select(country_full)
table_count<-count(firt_position)
barplot(table_count)
table_count<-count(firt_position)
table_count
library(ggplot2)
library(DT)
library(png)
library(dplyr)
library(formattable)
library(markdown)
library(lubridate)
library(plyr)
library(tidyr)
data<-read.csv(file.choose(),header = TRUE)
fifa<-as.data.frame(data)
firt_position <- fifa%>%filter(rank<=3)%>%select(country_full)
table_count<-count(firt_position)
barplot(table_count, main="Car Distribution",
xlab="Number of Gears")
library(ggplot2)
library(DT)
library(png)
library(dplyr)
library(formattable)
library(markdown)
library(lubridate)
library(plyr)
library(tidyr)
data<-read.csv(file.choose(),header = TRUE)
fifa<-as.data.frame(data)
firt_position <- fifa%>%filter(rank<=3)%>%select(country_full)
table_count<-count(firt_position)
pie(table_count)
View(table_count)
formattable(table_count)
barplot(table(firt_position))
barplot(table(table_count))
library(ggplot2)
library(DT)
library(png)
library(dplyr)
library(formattable)
library(markdown)
library(lubridate)
library(plyr)
library(tidyr)
data<-read.csv(file.choose(),header = TRUE)
fifa<-as.data.frame(data)
firt_position <- fifa%>%filter(rank<=3)%>%select(country_full)
table_count<-count(firt_position)
pie(table_count)
library(ggplot2)
library(DT)
library(png)
library(dplyr)
library(formattable)
library(markdown)
library(lubridate)
library(plyr)
library(tidyr)
data<-read.csv(file.choose(),header = TRUE)
fifa<-as.data.frame(data)
firt_position <- fifa%>%filter(rank<=3)%>%select(country_full)
table_count<-count(firt_position)
barplot(table_count$freq,names.arg = table_count$country_full)
table_count<-count(firt_position)%>%arrange(desc(firt_position))
pie(table_count$freq)
pie(table_count$freq,labels = table_count$country_full)
library(ggplot2)
library(DT)
library(png)
library(dplyr)
library(formattable)
library(markdown)
library(lubridate)
library(plyr)
library(tidyr)
data<-read.csv(file.choose(),header = TRUE)
fifa<-as.data.frame(data)
firt_position <- fifa%>%filter(rank<=3)%>%select(country_abrv)
table_count<-count(firt_position)
barplot(table_count$freq,names.arg = table_count$country_abrv)
pie(table_count$freq,labels = table_count$country_abrv)
library(ggplot2)
library(DT)
library(png)
library(dplyr)
library(formattable)
library(markdown)
library(lubridate)
library(plyr)
library(tidyr)
data<-read.csv(file.choose(),header = TRUE)
fifa<-as.data.frame(data)
firt_position <- fifa%>%filter(rank<=3)%>%select(country_abrv)
table_count<-count(firt_position,sort=TRUE)
barplot(table_count$freq,names.arg = table_count$country_abrv)
pie(table_count$freq,labels = table_count$country_abrv,col=rainbow(length(table_count$country_abrv))
z
pie(table_count$freq,labels = table_count$country_abrv,col=rainbow(length(table_count$country_abrv))
library(ggplot2)
library(DT)
library(png)
library(dplyr)
library(formattable)
library(markdown)
library(lubridate)
library(plyr)
library(tidyr)
data<-read.csv(file.choose(),header = TRUE)
fifa<-as.data.frame(data)
firt_position1 <- fifa%>%filter(rank<=3,rank_date=="6/7/2018")%>%select(country_abrv,previous_points,total_points)
pie(table_count$freq,labels = table_count$country_abrv,col=rainbow(length(table_count$country_abrv))
library(ggplot2)
library(DT)
library(png)
library(dplyr)
library(formattable)
library(markdown)
library(lubridate)
library(plyr)
library(tidyr)
data<-read.csv(file.choose(),header = TRUE)
fifa<-as.data.frame(data)
firt_position <- fifa%>%filter(rank<=3)%>%select(country_abrv)
table_count<-count(firt_position)
barplot(table_count$freq,names.arg = table_count$country_abrv)
#pie(table_count$freq,labels = table_count$country_abrv)
pie(table_count$freq,labels = table_count$country_abrv)
table_count<-count(firt_position)
View(table_count)
shiny::runApp('Desktop/R/group19')
library(ggplot2)
library(DT)
library(png)
library(dplyr)
library(formattable)
library(markdown)
library(lubridate)
library(plyr)
library(tidyr)
data<-read.csv(file.choose(),header = TRUE)
fifa<-as.data.frame(data)
firt_position <- fifa%>%filter(rank<=3)%>%select(country_abrv)
table_count<-count(firt_position)
#barplot(,names.arg = table_count$country_abrv)
gg<-ggplot(table_count$freq,aes(var1,freq))+geom_bar(stat="identity", width = 0.5, fill="tomato2")+ labs(title="Bar Chart",
subtitle="Manufacturer of vehicles",
caption="Source: Frequency of Manufacturers from 'mpg' dataset") +theme(axis.text.x = element_text(angle=65, vjust=0.6))
library(ggplot2)
library(DT)
library(png)
library(dplyr)
library(formattable)
library(markdown)
library(lubridate)
library(plyr)
library(tidyr)
data<-read.csv(file.choose(),header = TRUE)
fifa<-as.data.frame(data)
firt_position <- fifa%>%filter(rank<=3)%>%select(country_abrv)
table_count<-count(firt_position)
#barplot(,names.arg = table_count$country_abrv)
gg<-ggplot(table_count$freq,aes(var1,freq))+geom_bar(stat="identity", width = 0.5, fill="tomato2")
gg<-ggplot(table_count$freq,aes(table_count$country_abrv,table_count$freq))+geom_bar(stat="identity", width = 0.5, fill="tomato2")
gg<-ggplot(table_count,aes(table_count$country_abrv,table_count$freq))+geom_bar(stat="identity", width = 0.5, fill="tomato2")
gg
gg<-ggplot(table_count,aes(table_count$country_abrv,table_count$freq))+geom_bar(stat="identity", width = 0.5, fill="tomato2")+labs(title="BAR CHART",subtitle="COUNTRIES THAT OCCUPPIED THE TOP 3")+theme(axis.text.x = element_text(angle=65, vjust=0.6))
gg
gg<-ggplot(table_count,aes(Number_Of_Times,Country))+geom_bar(stat="identity", width = 0.5, fill="tomato2")+labs(title="BAR CHART",subtitle="COUNTRIES THAT OCCUPPIED THE TOP 3")+theme(axis.text.x = element_text(angle=65, vjust=0.6))
gg
gg<-ggplot(table_count,aes(table_count$freq,table_count$country_abrv))+geom_bar(stat="identity", width = 0.5, fill="tomato2")+labs(title="BAR CHART",subtitle="COUNTRIES THAT OCCUPPIED THE TOP 3")+theme(axis.text.x = element_text(angle=65, vjust=0.6))
gg
gg<-ggplot(table_count,aes(table_count$country_abrv,table_count$freq))+geom_bar(stat="identity", width = 0.5, fill="tomato2")+labs(title="BAR CHART",subtitle="COUNTRIES THAT OCCUPPIED THE TOP 3")+theme(axis.text.x = element_text(angle=65, vjust=0.6))
gg
#gg<-ggplot(table_count,aes(table_count$country_abrv,table_count$freq))+geom_bar(stat="identity", width = 0.5, fill="tomato2")+labs(title="BAR CHART",subtitle="COUNTRIES THAT OCCUPPIED THE TOP 3")+theme(axis.text.x = element_text(angle=65, vjust=0.6))
#treemapify install
#counts chart
g<-ggplot(table_count,aes(table_count$country_abrv,table_count$freq))+geom_count(col="tomato3", show.legend=F)
g
shiny::runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('/media/root/Image/visual.R')
runApp('/media/root/Image/time.R')
library(plyr)
library(dplyr)
library(ggplot2)
library(png)
?install.packages
#get file
data<-read.csv(file.choose(),header = TRUE)
fifa<-as.data.frame(data)%>%filter(country_abrv=="UGA")
attach(fifa)
tp <- fifa$total_points
pp <-fifa$previous_points
cf <-fifa$country_full
rc <-fifa$rank_change
rd <-fifa$rank_date
rk <-fifa$rank
#chart file name.
png(file="line_rk_rd.png")
#plot the line chart for rank in the different years
plot(x=rd,y=rk,type = "l",col="red",xlab ="date",ylab = "rank",main = "Rank in The Years")
#save the file
dev.off()
#chart file Rank change in Years"
png(file="line_rc_rd.png")
plot(x=rd,y=rc,type ="l" ,col="red",xlab ="date",ylab = "rank_change",main = "Rank change in Years")
#save the file
dev.off()
#chart file  Previous points in Years
png(file="line_pp_rd.png")
plot(x=rd,y=pp,type = "l",col="red",xlab ="date",ylab = "prev_point",main = "Previous points in Years")
#save the file
dev.off()
#chart file Total points and their Rank
png(file="line_rk_tp.png")
plot(x=tp,y=rk,type = "l",col="red",xlab ="total_point",ylab = "rank",main = "Total points and their Rank")
#save the file
dev.off()
#chart file Total points and their Rank
png(file="line_country_tp.png")
plot(tp,type = "l",col="red",xlab ="total_point",ylab = "rank",main = "Total points in country")
#save the file
dev.off()
summary(tp)
runApp('/media/root/Image/count.R')
View(firt_position)
library(ggplot2)
library(DT)
library(png)
library(dplyr)
library(formattable)
library(markdown)
library(lubridate)
library(plyr)
library(tidyr)
data<-read.csv(file.choose(),header = TRUE)
fifa<-as.data.frame(data)
firt_position <- fifa%>%filter(rank<=3)%>%select(country_abrv,rank,rank_date)
#table_count<-count(firt_position)
#barplot(,names.arg = table_count$country_abrv)
#gg<-ggplot(table_count,aes(table_count$country_abrv,table_count$freq))+geom_bar(stat="identity", width = 0.5, fill="tomato2")+labs(title="BAR CHART",subtitle="COUNTRIES THAT OCCUPPIED THE TOP 3")+theme(axis.text.x = element_text(angle=65, vjust=0.6))
#treemapify install
#counts chart
#g<-ggplot(table_count,aes(table_count$country_abrv,table_count$freq))+geom_count(col="tomato3", show.legend=F)
firt_position
View(firt_position)
country_data<-fifa%>%filter(rank==1,filtered_date<-substring(rank_date,6)=="2007")%>%select(country_abrv)
country_data
country_data<-fifa%>%filter(rank==2,filtered_date<-substring(rank_date,6)=="2007")%>%select(country_abrv)
country_data
country_data<-fifa%>%filter(rank==3,filtered_date<-substring(rank_date,6)=="2007")%>%select(country_abrv)
country_data
country_data<-fifa%>%filter(rank==3,filtered_date<-substring(rank_date,6)=="2009")%>%select(country_abrv)
country_data
country_data<-fifa%>%filter(rank==2,filtered_date<-substring(rank_date,6)=="2009")%>%select(country_abrv)
country_data
country_data<-fifa%>%filter(rank==1,filtered_date<-substring(rank_date,6)=="2009")%>%select(country_abrv)
country_data
View(firt_position)
View(firt_position)
country_data<-fifa%>%filter(rank==1,filtered_date<-substring(rank_date,6)=="2009")%>%select(country_abrv)
country_data
country_data<-fifa%>%filter(rank==1,filtered_date<-substring(rank_date,6)=="2010")%>%select(country_abrv)
country_data
shiny::runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
shiny::runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
fifa<-as.data.frame(data)
data4<-data%>%
select(rank,country_full,rank_change,previous_points,rank_date)
data4
#get file
data<-read.csv(file.choose(),header = TRUE)
data
fifa<-as.data.frame(data)
fifa
data4<-data%>%
select(rank,country_full,rank_change,previous_points,rank_date)
data4
subset <- data4%>%select(rank_date)
subset
subset <- data4%>%select(rank_date)
subset <- data4%>%select(rank_date)
subset_date <- format(as.Date(subset$rank_date, format="%Y/%m/%d"),"%Y")
subset_date
data4<-data%>%
select(rank,country_full,rank_change,previous_points,rank_date)
subset <- data4%>%select(rank_date)
subset_date <- format(as.Date(subset$rank_date, format="%d-%m-%Y"),"%Y")
subset_date
subset
subset <- data4%>%select(rank_date)
subset_date <- format(as.Date(subset$rank_date, format="%m/%d/%Y"),"%Y")
subset_date
runApp('Desktop/R/group19')
shiny::runApp('Documents')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
runApp('Desktop/R/group19')
shiny::runApp()
rsconnect::setAccountInfo(name='fifarankingsystem', token='E149DAD0386283C5FF2A38BEB449A08E', secret='+bZhFxJ0de95mXKWtuureyXHZURcdgQK8kgEUfpg')
library(rsconnect)
rsconnect::deployApp()
rsconnect::deployApp(/Desktop/R/group19)
rsconnect::deployApp(Desktop/R/group19)
rsconnect::deployApp('Desktop/R/group19')
rsconnect::deployApp('Desktop/R/group19/app')
rsconnect::deployApp('Desktop/R/group19/app.R')
rsconnect::deployApp('root/Desktop/R/group19/app.R')
rsconnect::deployApp('Home/Desktop/R/group19/app.R')
rsconnect::deployApp('root/Home/Desktop/R/group19/app.R')
rsconnect::setAccountInfo(name='fifarankingsystem',
token='E149DAD0386283C5FF2A38BEB449A08E',
secret='+bZhFxJ0de95mXKWtuureyXHZURcdgQK8kgEUfpg')
runApp()
runApp()
library(rsconnect)
deploy()
deployApp()
data("AirPassengers")
class(AirPassengers)
start(AirPassengers)
end(AirPassengers)
frequency(AirPassengers)
summary(AirPassengers)
plot(AirPassengers)
abline(reg = lm(AirPassengers~time(AirPassengers)))
cycle(AirPassengers)
plot(aggregate(AirPassengers,FUN = mean))
boxplot(AirPassengers~cycle(AirPassengers))
plot(aggregate(AirPassengers,FUN = mean))
adf.test(diff(log(AirPassengers)),alternative="stationary",k=0)
acf(log(AirPassengers))
acf(diff(log(AirPassengers)))
pacf(diff(log(AirPassengers)))
fit<-arima(log(AirPassengers),c(0,1,1),seasonal = list(order=c(0,1,1),period=12))
pred<-predict(fit,n.head=10*12)
ts.plot(AirPassengers,2.718^pred$pred,log="y",lty=c(1,3))
install.packages("dataiku")
install.packages("forecast")
install.packages("forecast", lib="/usr/lib/R/site-library")
install.packages("forecast", lib="/usr/lib/R/library")
library(dplyr)
data<-read.csv(file.choose(),header = TRUE)
fifa<-as.data.frame(data)
bazil<-fifa%>%filter(country_abrv=="BRA")%>%select(rank,previous_points,total_points,rank_change,rank_date)
head(bazil)
View(brazil)
View(bazil)
plot_pred<-ts(bazil$rank,start(1993),frequency = 12)
plot(plot_pred)
install.packages("forecast", lib="/usr/lib/R/library")
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('rsconnect')\
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='fifarankingsystem', token='E149DAD0386283C5FF2A38BEB449A08E', secret='+bZhFxJ0de95mXKWtuureyXHZURcdgQK8kgEUfpg')
library(rsconnect)
deployApp()
deployApp()
shiny::runApp()
deployApp()
<<<<<<< HEAD
shiny::runApp()
runApp()
rsconnect::setAccountInfo(name='fifarankingsystem', token='E149DAD0386283C5FF2A38BEB449A08E', secret='+bZhFxJ0de95mXKWtuureyXHZURcdgQK8kgEUfpg')
library(rsconnect)
rsconnect::deployApp('Desktop/group19/')
rsconnect::deployApp('Desktop/group19/app')
rsconnect::deployApp('Desktop/group19/app.R')
shiny::runApp()
runApp()
shiny::runApp()
runApp()
=======
>>>>>>> dbdb3889f5ff01dc56ccbe32f02602b9ca34bd01
