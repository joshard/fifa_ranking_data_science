install.packages("R2html")
install.packages("DT")
install.packages("rmarkdown")
install.packages("blogdown")
shinyServer(
ui<-pageWithSidebar(
headerPanel("My first Shiny App"),
sidebarPanel("Side bar"),
mainPanel("Main panel")
)
)
shinyServer(
ui<-pageWithSidebar(
headerPanel("My first Shiny App"),
sidebarPanel("Side bar"),
mainPanel("Main panel")
)
)
shiny::runApp('mode')
runApp('mode')
install.packages("glmmLasso")
shiny::runApp('mode')
install.packages("rsconnect")
install.packages("RCurl")
library(shiny)
shinyUI(fluidPage(
titlePanel("FiFA World Ranking System"),
navlistPanel(
"Header A",
tabPanel("Component 1"),
tabPanel("Component 2"),
"Header B",
tabPanel("Component 3"),
tabPanel("Component 4"),
)
))
library("Rcpp", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library(shiny)
shinyUI(fluidPage(
titlePanel("FiFA World Ranking System"),
navlistPanel(
"Header A",
tabPanel("Component 1"),
tabPanel("Component 2"),
"Header B",
tabPanel("Component 3"),
tabPanel("Component 4"),
)
))
shiny::runApp('try/my app')
runApp('mode')
runApp('R/table.R')
runApp('R/table.R')
runApp('R/table.R')
runApp('R/image.R')
runApp('R/image.R')
install.packages("shinydashboard")
library(shiny)
shinyUI(fluidPage(
titlePanel("FiFA World Ranking System"),
navlistPanel(
"Header A",
tabPanel("Component 1"),
tabPanel("Component 2"),
"Header B",
tabPanel("Component 3"),
tabPanel("Component 4"),
)
))
runApp('R/table.R')
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader("FiFA World Ranking System"),
dashboardSidebar(),
dashboardBody()
)
server <- function(input,output){
}
shinyApp(ui,server)
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
shiny::runApp('dashboard')
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "FiFA World Ranking System"),
dashboardSidebar(),
dashboardPage(skin = "green"),
dashboardBody(
fluidRow(
box(
title = "controls",
sliderInput("slider","Observations:",
min = 1,max=100, value = 50)
)
)
)
)
server <- function(input,output){
}
shinyApp(ui=ui,server=server)
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
library(shiny)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "FiFA World Ranking System"),
dashboardSidebar(),
skin = "green",
dashboardBody(
fluidRow(
box(
title = "controls",
sliderInput("slider","Observations:",
min = 1,max=100, value = 50)
)
)
)
)
server <- function(input,output){
}
shinyApp(ui=ui,server=server)
runApp('dashboard')
runApp('dashboard')
library(shiny)
library(ggplot2)
dataset <- diamonds
shinyUI(fluidPage(
title = "Diamonds Explorer",
plotOutput('plot'),
hr(),
fluidRow(
column(3,
h4("Diamonds Explorer"),
sliderInput('sampleSize', 'Sample Size',
min=1, max=nrow(dataset), value=min(1000, nrow(dataset)),
step=500, round=0),
br(),
checkboxInput('jitter', 'Jitter'),
checkboxInput('smooth', 'Smooth')
),
column(4, offset = 1,
selectInput('x', 'X', names(dataset)),
selectInput('y', 'Y', names(dataset), names(dataset)[[2]]),
selectInput('color', 'Color', c('None', names(dataset)))
),
column(4,
selectInput('facet_row', 'Facet Row', c(None='.', names(dataset))),
selectInput('facet_col', 'Facet Column', c(None='.', names(dataset)))
)
)
))
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
shiny::runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
shiny::runApp('dashboard')
library("Rcpp", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
shiny::runApp('dashboard')
install.packages("png")
install.packages("magick")
install.packages("curl")
install.packages("devtools")
shiny::runApp('dashboard')
library("Rcpp", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library(shiny)
library(shinydashboard)
library(ggplot2)
library(DT)
library(rmarkdown)
library(png)
ui <- dashboardPage(
dashboardHeader(title = "FiFA World Ranking System"),
dashboardSidebar(
list(tags$head(tags$style()),
HTML('<img scr="/home/joshard/dashboard/stat.jpg",height="100" width="230" />')
),
tags$br(),
tags$h3("Conferderation"),
tags$ul(
tags$li("UEFA"),
tags$li("CAF"),
tags$li("CONMEBOL"),
tags$li("AFC"),
tags$li("OFC"),
tags$li("CONCACAF")
),
a("BesT Team!",href="/home/joshard/R/table.R/")
),
skin = "green",
dashboardBody(
navbarPage("Applications",
tabPanel("charts"),
tabPanel("histogram"),
tabPanel("tables")
),
fluidRow(
column(6,
box(
title = "controls",
sliderInput("slider","Observations:",
min = 1,max=100, value = 50)
)
),
column(6,
tags$img(height=100,
width=230,
src="/home/joshard/dashboard/stat.jpg"
)
)
),
fluidRow(
column(12,
csvdata <-read.csv("/home/joshard/mode/fifa_ranking.csv",header = TRUE),
DT::dataTableOutput("csvdata")
)
)
)
)
server <- function(input,output){
output$csvdata <- DT::renderDataTable({
csvdata
})
}
shinyApp(ui=ui,server=server)
ui = fluidPage(titlePanel("Vertical layout"),
verticalLayout(wellPanel(
sliderInput("n", "QQ Plot of normal distribution", 100, 1000,
value = 500)
),
plotOutput("plot1")))
server = function(input, output) {
output$plot1 = renderPlot({
qqnorm(rnorm(input$n))
})
}
shinyApp(ui, server)
library(shiny)
ui = fluidPage(
titlePanel("Conditional Panels"),
sidebarPanel(
numericInput("num","How many hours do you sleep?",min = 1,max = 24,value = 6)),
mainPanel(
conditionalPanel("input.num < 7","You need more sleep"),
conditionalPanel("input.num >= 9","You sleep a lot")
)
)
server = function(input,output){
}
shinyApp(ui,server)
library(shiny)
library(ggplot2)
dataset <- diamonds
shinyUI(fluidPage(
title = "Diamonds Explorer",
plotOutput('plot'),
hr(),
fluidRow(
column(3,
h4("Diamonds Explorer"),
sliderInput('sampleSize', 'Sample Size',
min=1, max=nrow(dataset), value=min(1000, nrow(dataset)),
step=500, round=0),
br(),
checkboxInput('jitter', 'Jitter'),
checkboxInput('smooth', 'Smooth')
),
column(4, offset = 1,
selectInput('x', 'X', names(dataset)),
selectInput('y', 'Y', names(dataset), names(dataset)[[2]]),
selectInput('color', 'Color', c('None', names(dataset)))
),
column(4,
selectInput('facet_row', 'Facet Row', c(None='.', names(dataset))),
selectInput('facet_col', 'Facet Column', c(None='.', names(dataset)))
)
)
))
shiny::runApp('dashboard')
library("Rcpp", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
runApp('testR/image.R')
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
shiny::runApp('dashboard')
shiny::runApp('dashboard')
runApp('mode')
library(shiny)
library(ggplot2)
dataset <- diamonds
shinyUI(fluidPage(
title = "Diamonds Explorer",
plotOutput('plot'),
hr(),
fluidRow(
column(3,
h4("Diamonds Explorer"),
sliderInput('sampleSize', 'Sample Size',
min=1, max=nrow(dataset), value=min(1000, nrow(dataset)),
step=500, round=0),
br(),
checkboxInput('jitter', 'Jitter'),
checkboxInput('smooth', 'Smooth')
),
column(4, offset = 1,
selectInput('x', 'X', names(dataset)),
selectInput('y', 'Y', names(dataset), names(dataset)[[2]]),
selectInput('color', 'Color', c('None', names(dataset)))
),
column(4,
selectInput('facet_row', 'Facet Row', c(None='.', names(dataset))),
selectInput('facet_col', 'Facet Column', c(None='.', names(dataset)))
)
)
))
runApp('testR/panel.R')
shiny::runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
shiny::runApp('dashboard')
runApp('testR/conditional.R')
shiny::runApp('dashboard')
runApp('dashboard')
runApp('dashboard')
